/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   calc.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ccastill <ccastill@42.us.org>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2017/07/10 21:26:59 by ccastill          #+#    #+#             */
/*   Updated: 2017/07/16 21:58:43 by ccastill         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "includes/ft.h"
#include <stdio.h>

int 	Grab_Atom(char **expr)
{
	int atom;
	while (*(*expr) == '(')
		(*expr)++;
	atom = atoi((*expr));
	(*expr)++;
	while (*(*expr) >= '0' && *(*expr) <= '9')
		   (*expr)++;
	return (atom);
}

int		Calc_Factors(char **expr)
{
	int	num1;
	int num2;
	char oper;

	num1 = Grab_Atom(expr);
	while ((*expr))
	{
		oper = *(*expr);
		if (oper == ')')
		{
			(*expr)++;
			oper = (*(*expr));
		}
		if (oper != '/' && oper != '*' && oper != '%')
			return (num1);
		(*expr)++;
		num2 = Grab_Atom(expr);
		if (oper == '/')
			num1 = num1 / num2;
		else if (oper == '%')
			num1 = num1 % num2;
		else if (oper == '*')
			num1 = num1 * num2;
		}
	return (0);
}

int		Calc_Summands(char **expr)
{
	int num1;
	int num2;
	char oper;

	num1 = Calc_Factors(expr);
	while ((*expr))
	{
		oper = *(*expr);
		if (oper != '-' && oper  != '+')
			return (num1);
		(*expr)++;
		num2 = Calc_Factors(expr);
		if (oper == '-')
			num1 = num1 - num2;
		else
			num1 = num1 + num2;
	}
	return (0);
}

int     eval_expr(char *str)
{
    char    *remove;
	int		result;

    remove = ft_split_whitespaces(str);
	result = Calc_Summands(&remove);
	return (result);
}

int		main(int ac, char **av)
{
	if (ac > 1)
	{
		ft_putnbr(eval_expr(av[1]));
		ft_putchar('\n');
	}
	return (0);
}
